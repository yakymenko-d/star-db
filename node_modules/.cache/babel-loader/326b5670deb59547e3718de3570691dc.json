{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/Projects/ReactRedux/react-apps/star-db/src/components/random-planet/random-planet.js\";\nimport React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\nimport './random-planet.css';\nexport default class RandomPlanet extends Component {\n  constructor() {\n    super();\n    this.swapiService = new SwapiService();\n    this.state = {\n      planet: {}\n    };\n\n    this.onPlanetLoaded = planet => {\n      this.setState({\n        id,\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      });\n    };\n\n    this.updatePlanet();\n  }\n\n  updatePlanet() {\n    const id = Math.floor(Math.random() * 25 + 2);\n    this.swapiService.getPlanet(id).then(planet => {\n      this.setState({\n        id,\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      });\n    });\n  }\n\n  render() {\n    const _this$state$planet = this.state.planet,\n          id = _this$state$planet.id,\n          name = _this$state$planet.name,\n          population = _this$state$planet.population,\n          rotationPeriod = _this$state$planet.rotationPeriod,\n          diameter = _this$state$planet.diameter;\n    return React.createElement(\"div\", {\n      className: \"random-planet jumbotron rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"planet-image\",\n      src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n      alt: \"planet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Population\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, population)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Rotation Period\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, rotationPeriod)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Diameter\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, diameter)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Documents/Projects/ReactRedux/react-apps/star-db/src/components/random-planet/random-planet.js"],"names":["React","Component","SwapiService","RandomPlanet","constructor","swapiService","state","planet","onPlanetLoaded","setState","id","name","population","rotationPeriod","rotation_period","diameter","updatePlanet","Math","floor","random","getPlanet","then","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SwapiService from '../../services/swapi-service';\n\nimport './random-planet.css';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {}\n  };\n\n  constructor() {\n    super();\n    this.updatePlanet();\n  };\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      id,\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter,\n    })\n  };\n\n  updatePlanet() {\n    const id = Math.floor(Math.random()*25 + 2);\n    this.swapiService\n      .getPlanet(id)\n      .then((planet) => {\n        this.setState({\n          id,\n          name: planet.name,\n          population: planet.population,\n          rotationPeriod: planet.rotation_period,\n          diameter: planet.diameter,\n        });\n      });\n  };\n\n  render() {\n\n    const { planet: { id, name, population, rotationPeriod, diameter } } = this.state;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        <img className=\"planet-image\"\n             src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n             alt=\"planet\"/>\n        <div>\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Population</span>\n              <span>{population}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Rotation Period</span>\n              <span>{rotationPeriod}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Diameter</span>\n              <span>{diameter}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}