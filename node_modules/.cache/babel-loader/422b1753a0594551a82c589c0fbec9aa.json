{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResourse(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Couldn't fetch \".concat(url, \", recieved \").concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResourse(\"/people/\");\n    return res.results.map(this._transformPerson);\n  }\n\n  async getPerson(id) {\n    const person = await this.getResourse(\"/people/\".concat(id, \"/\"));\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(\"/planets/\");\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResourse(\"/planets/\".concat(id, \"/\"));\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(\"/starships/\");\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResourse(\"/starships/\".concat(id, \"/\"));\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet(planet) {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformStarship(starship) {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    };\n  }\n\n  _transformPerson(person) {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birthYear,\n      eyeColor: person.eyeColor\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/dev/Documents/Projects/ReactRedux/react-apps/star-db/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  async getResourse(url) {\n    const res = await fetch (`${this._apiBase}${url}`);\n\n    if(!res.ok) {\n      throw new Error(`Couldn't fetch ${url}, recieved ${res.status}`)\n    }\n\n    return await res.json()\n  };\n\n  async getAllPeople() {\n    const res = await this.getResourse(`/people/`);\n    return res.results.map(this._transformPerson);\n  }\n\n  async getPerson(id) {\n    const person = await this.getResourse(`/people/${id}/`);\n    return this._transformPerson(person);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResourse(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(`/starships/`);\n    return res.results.map(this._transformStarship);\n  }\n\n  async getStarship(id) {\n    const starship = await this.getResourse(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  }\n\n  _transformPlanet(planet) {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter,\n    }\n  }\n\n  _transformStarship(starship) {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.costInCredits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargoCapacity\n    }\n  }\n\n  _transformPerson(person) {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birthYear,\n      eyeColor: person.eyeColor\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}