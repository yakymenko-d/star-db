{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResourse(url) {\n    const res = await fetch(\"\".concat(this._apiBase).concat(url));\n\n    if (!res.ok) {\n      throw new Error(\"Couldn't fetch \".concat(url, \", recieved \").concat(res.status));\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeople() {\n    const res = await this.getResourse(\"/people/\");\n    return res.results;\n  }\n\n  getPerson(id) {\n    return this.getResourse(\"/people/\".concat(id, \"/\"));\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(\"/planets/\");\n    return res.results;\n  }\n\n  getPlanet(id) {\n    return this.getResourse(\"/planets/\".concat(id, \"/\"));\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(\"/starships/\");\n    return res.results;\n  }\n\n  getStarship(id) {\n    return this.getResourse(\"/starships/\".concat(id, \"/\"));\n  }\n\n}\nconst swapi = new SwapiService();\nswapi.getPlanet(2).then(p => {\n  console.log(p.name);\n});","map":{"version":3,"sources":["/Users/dev/Documents/Projects/ReactRedux/react-apps/star-db/src/services/swapi-service.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","ok","Error","status","json","getAllPeople","results","getPerson","id","getAllPlanets","getPlanet","getAllStarships","getStarship","swapi","then","p","console","log","name"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAEhCC,QAFgC,GAErB,sBAFqB;AAAA;;AAIhC,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACrB,UAAMC,GAAG,GAAG,MAAMC,KAAK,WAAK,KAAKJ,QAAV,SAAqBE,GAArB,EAAvB;;AAEA,QAAG,CAACC,GAAG,CAACE,EAAR,EAAY;AACV,YAAM,IAAIC,KAAJ,0BAA4BJ,GAA5B,wBAA6CC,GAAG,CAACI,MAAjD,EAAN;AACD;;AAED,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACD;;AAED,QAAMC,YAAN,GAAqB;AACnB,UAAMN,GAAG,GAAG,MAAM,KAAKF,WAAL,YAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACD;;AAEDC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACZ,WAAO,KAAKX,WAAL,mBAA4BW,EAA5B,OAAP;AACD;;AAED,QAAMC,aAAN,GAAsB;AACpB,UAAMV,GAAG,GAAG,MAAM,KAAKF,WAAL,aAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACD;;AAEDI,EAAAA,SAAS,CAACF,EAAD,EAAK;AACZ,WAAO,KAAKX,WAAL,oBAA6BW,EAA7B,OAAP;AACD;;AAED,QAAMG,eAAN,GAAwB;AACtB,UAAMZ,GAAG,GAAG,MAAM,KAAKF,WAAL,eAAlB;AACA,WAAOE,GAAG,CAACO,OAAX;AACD;;AAEDM,EAAAA,WAAW,CAACJ,EAAD,EAAK;AACd,WAAO,KAAKX,WAAL,sBAA+BW,EAA/B,OAAP;AACD;;AAvC+B;AA4ClC,MAAMK,KAAK,GAAG,IAAIlB,YAAJ,EAAd;AAEAkB,KAAK,CAACH,SAAN,CAAgB,CAAhB,EAAmBI,IAAnB,CAAyBC,CAAD,IAAO;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAd;AACD,CAFD","sourcesContent":["export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  async getResourse(url) {\n    const res = await fetch (`${this._apiBase}${url}`);\n\n    if(!res.ok) {\n      throw new Error(`Couldn't fetch ${url}, recieved ${res.status}`)\n    }\n\n    return await res.json()\n  };\n\n  async getAllPeople() {\n    const res = await this.getResourse(`/people/`);\n    return res.results;\n  }\n\n  getPerson(id) {\n    return this.getResourse(`/people/${id}/`);\n  }\n\n  async getAllPlanets() {\n    const res = await this.getResourse(`/planets/`);\n    return res.results;\n  }\n\n  getPlanet(id) {\n    return this.getResourse(`/planets/${id}/`);\n  }\n\n  async getAllStarships() {\n    const res = await this.getResourse(`/starships/`);\n    return res.results;\n  }\n\n  getStarship(id) {\n    return this.getResourse(`/starships/${id}/`);\n  }\n\n  \n}\n\nconst swapi = new SwapiService();\n\nswapi.getPlanet(2).then((p) => {\n  console.log(p.name);\n});\n"]},"metadata":{},"sourceType":"module"}